clcclear% Data related operationsA = [1 2; 3 4; 5 6]printf("size(A) results the diamension of the matrix...\n")size(A) % It actually returns a 1 X 2 matrixprintf("size(A,1) returns the number of rows in the argument matrix...\n")size(A,1)printf("\nsize(A,2) returns the number of columns in the argument matrix...\n")size(A,2)printf("\nsize(A,x) returns 1 when x>2...\n")size(A,3)printf("\n")V = [1 2 3 4]printf("length(V) returns the length of the Vector...\n")length(V)printf("\nlength(A) returns the grater value of the matrix {For A it's 3}...\n")length(A)% pwd is used to get current pathprintf("\npwd is used to get current path...\n")pwd% cd is used to Change Directory% ls is used to list all files/folders in the directory% In Octave commandes are bit similar like linux% change execution path accordinglycd C:/Users/shasw/Octave_Projects/octave-practicecd ./dataprintf("\n load <filename> OR load('filename.dat')is used to load data files...\n")load featuresX.datfeaturesXload pricesY.datpricesYprintf("who shows assigned variables in the current workspace...\n")whoprintf("\nwhos provides the detailed view...\n")whosprintf("\nclear <variable_name> clears that variable from memory...\n")printf("\nclearing featuresX from memory...\n")clear featuresX % clear without a following variable name cears all variableswhosprintf("\nload customised data from another loaded data...\n")printf("\npricesY(1:10) loads first 10 data from pricesY...\n")V = pricesY(1:10)printf("\n{save <fileName> <variableName>} saves the variable into the file...\n")printf("\ne.g.: save filteredPricesY.dat V\n")save filteredPricesY.dat V  % {save <fileName.txt> <VariableName> --ascii} saves data in ASCII or human readable format printf("\n")% Some Matrix commandsAprintf("\nA(3,2) prints the data at the specific location...\n")A(3,2)printf("\nA(3,:) prints the entire 3rd row...\n")A(3,:)  % ":" means every element along that row/columnprintf("\nA([1 3],:) instructs to print all vaues at 1st and 3rd row...\n")A([1 3],:)% Run-Time data modificationAprintf("\n{A=(:,2) = [10;11;12]} assigns 10,11,12 in the 2nd column of A...\n")A(:,2) = [10; 11; 12]printf("\n{A = [A, [100;101;102]]} will append another column with matrix A...\n")A = [A, [100;101;102]]printf("\n{A(:)} will put all vaues of matrix A into a column vartor...\n")A(:)A = [1 2; 3 4; 5 6]B = [10 11; 12 13; 14 15]printf("\n{C = [A B] or C = [A, B]} will append two matrices taking A in the left...\n")C = [A B]printf("\n{C = [A; B]} will append two matrices taking A in the top...\n")D = [A; B]  % semicolon usually menas goto the next line