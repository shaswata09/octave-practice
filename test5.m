% for, while, if statements & functions...clcclearv = zeros(10,1)printf("\nSetting index ^ 2 in the vector using for...\n")% sample for loopfor i = [1:10],  % for i = indices where indices = [1:10] would also work  v(i) = 2^i;end;vprintf("\nReplacing first 5 elements of v by 100 using while loop...\n")% sample while loopi = 1;while i<=5,  v(i) = 100;  i = i+1;end;v% sample if exampleprintf("\nPrinting result based on value...\n")v(i)=2;if v(i)==1,  disp('The value is one...')elseif v(i)==2,  disp('The value is two...')else,  disp('The value is none of one or two...')endif;% sample exaple break satementprintf("\nReplacing first 5 elements of v by 999 using while loop & break statement...\n")i=1;while true,  v(i) = 999;  i=i+1;  if i == 6,    break;  endif;
end;v% sample function callingprintf("\nCalling squareThisNumber custom function to get square value...\n")cd ./functions  % changing to function pathsquareThisNumber(5) % calling user defined functioncd .. % returning back to script path% Octave search path (advanced/optional)printf("\naddpath('<PATH>') adds serach path to Octave...\n")addpath('C:\Users\shasw\Octave_Projects\octave-practice\functions\')printf("After adding search path to Octave, we can call our functions without changing directory...\n")pwdsquareThisNumber(5)% another function calling example to get multuple return valuesprintf("\nGetting two values from custom function...\n")[a, b] = squareAndCubeThisNumber(5)% example on cost functionX = [1 1; 1 2; 1 3]y = [1; 2; 3]theta = [0; 1]printf("\nFinding the cost function...\n")j = costFunctionJ(X, y, theta)printf("\nChecking cost function with different theta value...\n")theta = [0; 0]j = costFunctionJ(X, y, theta)  % j = 2.3333 = (1^2+2^2+3^2)/(2*3)% (1^2+2^2+3^2)/(2*3)   % Un-comment to test it manually